{"version":3,"sources":["Assets/4.png","Assets/Jonsy.jpg","Assets/Vineet.jpg","Assets/Udit.jpg","Assets/Muskan5.jpg","Components/Content/Content.js","Components/Spinner/Spinner.js","Components/Modal/Modal.js","Components/Form/Form.js","Components/Content1/Content1.js","Containers/Home.js","Containers/AboutUs.js","Components/Footer/Footer.js","Components/Navigation/Navigation.js","Containers/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Content","props","useSpring","to","opacity","marginBottom","from","delay","div","style","Jumbotron","className","Container","SpinnerM","Button","variant","disabled","Spinner","as","animation","size","role","aria-hidden","ModalOver","handleClose","setState","show","state","Modal","this","onHide","aria-labelledby","centered","Header","closeButton","Title","id","Body","title","content","React","Component","Former","MonthChange","event","Month","target","value","console","log","DayChange","Day","ExtendedChange","Extended","LatChange","Latitude","LongChange","Longtitude","MulChange","Multiple","SuiChange","Suicide","AtkChange","Atype","TtChange","Ttype","IndChange","Individual","WtChange","Wtype","onSubmit","clicked","preventDefault","forceUpdate","fetch","method","headers","body","JSON","stringify","then","response","json","user","Output","OutputShow","config","Row","Col","Image","src","balidan","fluid","Form","actions","Group","controlId","Label","Control","type","placeholder","onChange","onClick","Content1","Home","About","CardDeck","Card","bg","text","Img","Muskan","Text","Footer","Udit","Vineet","Jonsy","fixed","Navigation","Navbar","collapseOnSelect","expand","sticky","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","Layout","path","render","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.15845320.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/4.8e0c33a2.png\";","module.exports = __webpack_public_path__ + \"static/media/Jonsy.75b23e18.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Vineet.99d5cd89.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Udit.f06b3ba5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Muskan5.5402d6a9.jpg\";","import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport Container from 'react-bootstrap/Container'\r\nimport './Content.css'\r\nimport { useSpring, animated } from 'react-spring'\r\n\r\n\r\nconst Content = () => {\r\n    const props = useSpring({  to: { opacity: 1, marginBottom: 0 }, from: { opacity: 0, marginBottom: -500 } , delay : 200})\r\n    return (\r\n        <animated.div style={props}>\r\n\r\n            <Jumbotron className=\"Jumbo\">\r\n                <Container>\r\n\r\n                    <h1 className=\"ch1\">TERROR PREDICTION SYSTEM</h1>\r\n                    <p>Making Military Solutions For All</p>\r\n\r\n\r\n                </Container>\r\n            </Jumbotron>\r\n        </animated.div>\r\n\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport { Spinner , Button } from 'react-bootstrap';\r\n\r\n\r\nconst SpinnerM = () => {\r\n    return(\r\n        <Button variant=\"primary\" disabled>\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"grow\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n        />\r\n        Loading...\r\n      </Button>\r\n    );\r\n\r\n}\r\n\r\nexport default SpinnerM;","import React from 'react';\r\nimport { Modal } from 'react-bootstrap'\r\n\r\nclass ModalOver extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: true\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ show: false });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n\r\n                show={this.state.show}\r\n                onHide={this.handleClose}\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                animation={true}\r\n\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\"  >\r\n                        Terror Success Predictor\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>{this.props.title}</h4>\r\n                    <p>\r\n                        {this.props.content}\r\n                    </p>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ModalOver;","import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Spinner from '../Spinner/Spinner.js';\r\nimport { Row, Col, Button, Form, Image } from 'react-bootstrap'\r\nimport Modal from '../Modal/Modal.js';\r\nimport balidan from '../../Assets/4.png'\r\nimport './Form.css'\r\nimport { Spring } from 'react-spring/renderprops'\r\n\r\n\r\nclass Former extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Month: '',\r\n            Day: '',\r\n            Extended: '',\r\n            Latitude: '',\r\n            Longtitude: '',\r\n            Multiple: '',\r\n            Suicide: '',\r\n            Atype: '',\r\n            Ttype: '',\r\n            Individual: '',\r\n            Wtype: '',\r\n            Output: '',\r\n            clicked: 'nc',\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n    MonthChange = event => {\r\n        this.setState({ Month: event.target.value });\r\n        console.log(this.state.Month);\r\n    }\r\n\r\n    DayChange = event => {\r\n        this.setState({ Day: event.target.value });\r\n    }\r\n\r\n    ExtendedChange = event => {\r\n        this.setState({ Extended: event.target.value });\r\n    }\r\n\r\n    LatChange = event => {\r\n        this.setState({ Latitude: event.target.value });\r\n    }\r\n\r\n    LongChange = event => {\r\n        this.setState({ Longtitude: event.target.value });\r\n    }\r\n\r\n    MulChange = event => {\r\n        this.setState({ Multiple: event.target.value });\r\n    }\r\n\r\n    SuiChange = event => {\r\n        this.setState({ Suicide: event.target.value });\r\n    }\r\n\r\n    AtkChange = event => {\r\n        this.setState({ Atype: event.target.value });\r\n    }\r\n\r\n    TtChange = event => {\r\n        this.setState({ Ttype: event.target.value });\r\n    }\r\n\r\n    IndChange = event => {\r\n        this.setState({ Individual: event.target.value });\r\n    }\r\n\r\n    WtChange = event => {\r\n        this.setState({ Wtype: event.target.value });\r\n    }\r\n\r\n\r\n    onSubmit = (event) => {\r\n\r\n        this.setState({ clicked: 'p' });\r\n        console.log(this.state);\r\n        event.preventDefault();\r\n        this.forceUpdate();\r\n\r\n        fetch(\"https://frozen-refuge-43608.herokuapp.com/Predict\", {\r\n            method: \"post\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                Month: this.state.Month,\r\n                Day: this.state.Day,\r\n                Extended: this.state.Extended,\r\n                Latitude: this.state.Latitude,\r\n                Longtitude: this.state.Longtitude,\r\n                Multiple: this.state.Multiple,\r\n                Suicide: this.state.Suicide,\r\n                Atype: this.state.Atype,\r\n                Ttype: this.state.Ttype,\r\n                Individual: this.state.Individual,\r\n                Wtype: this.state.Wtype\r\n            })\r\n        }).then(response => response.json())\r\n            .then(user => {\r\n                this.setState({ clicked: 'd' })\r\n                this.setState({ Output: user[0] });\r\n                console.log(this.state.Output);\r\n                console.log(user[0]);\r\n                this.forceUpdate();\r\n            });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        let OutputShow = null;\r\n        if (this.state.clicked === 'p') {\r\n            OutputShow = <Spinner />\r\n        }\r\n\r\n\r\n        if (this.state.clicked === 'd') {\r\n            OutputShow = <Modal title={this.state.Output} content=\"Thanks for Using Our Services\" />\r\n        }\r\n\r\n\r\n        return (\r\n\r\n            <Spring\r\n                from={{ opacity: 0 ,marginBottom: -500}}\r\n                to={{ opacity: 1 ,marginBottom: 0}}\r\n                config={{delay:1000}}>\r\n                {props => <div style={props}>\r\n                    <Jumbotron className=\"Jumbo2\">\r\n                        <Container>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Image className=\"logo\" src={balidan} fluid />\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form actions=\"#\">\r\n                                        <Form.Group controlId=\"Month\">\r\n                                            <Form.Label>Month of Attack</Form.Label>\r\n                                            <Form.Control type=\"text\" placeholder=\"Enter Month Here\" onChange={this.MonthChange} />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group controlId=\"Day\">\r\n                                            <Form.Label>Day of Attack</Form.Label>\r\n                                            <Form.Control type=\"text\" placeholder=\"Enter Day Of Attack\" onChange={this.DayChange} />\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"Extended\">\r\n                                            <Form.Label>Extended</Form.Label>\r\n                                            <Form.Control type=\"text\" placeholder=\"Extended Here\" onChange={this.ExtendedChange} />\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"Latitude\">\r\n                                            <Form.Label>Latitude Of Place</Form.Label>\r\n                                            <Form.Control type=\"text\" placeholder=\"Latitude of place\" onChange={this.LatChange} />\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"Longtitude\">\r\n                                            <Form.Label>Longtitude Of Place</Form.Label>\r\n                                            <Form.Control type=\"text\" placeholder=\"Longtitude of place\" onChange={this.LongChange} />\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"Multiple\">\r\n                                            <Form.Label>Multiple</Form.Label>\r\n                                            <Form.Control type=\"text\" placeholder=\"Multiple\" onChange={this.MulChange} />\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"Suicide\">\r\n                                            <Form.Label>Suicide</Form.Label>\r\n                                            <Form.Control type=\"text\" placeholder=\"Suicide\" onChange={this.SuiChange} />\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"Atype\">\r\n                                            <Form.Label>Attack Type</Form.Label>\r\n                                            <Form.Control type=\"text\" placeholder=\"Attack Type\" onChange={this.AtkChange} />\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"Ttype\">\r\n                                            <Form.Label>Target Type</Form.Label>\r\n                                            <Form.Control type=\"text\" placeholder=\"Target Type\" onChange={this.TtChange} />\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"Individual\">\r\n                                            <Form.Label>Individual</Form.Label>\r\n                                            <Form.Control type=\"text\" placeholder=\"Individual Here\" onChange={this.IndChange} />\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"Weapon Type\">\r\n                                            <Form.Label>Weapon Type</Form.Label>\r\n                                            <Form.Control type=\"text\" placeholder=\"Weapon Type\" onChange={this.WtChange} />\r\n                                        </Form.Group>\r\n                                        <Button variant=\"primary\" type=\"submit\" onClick={this.onSubmit} >\r\n                                            Submit\r\n                                    </Button>\r\n                                    </Form>\r\n                                    <br></br>\r\n                                    <h1>{OutputShow}</h1>\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                        </Container>\r\n                    </Jumbotron>\r\n\r\n                </div>}\r\n            </Spring>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Former;","import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport Container from 'react-bootstrap/Container'\r\nimport './Content1.css'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { useSpring, animated } from 'react-spring'\r\n\r\n\r\nconst Content1 = () => {\r\n    const props = useSpring({ to: { opacity: 1, marginBottom: 0 }, from: { opacity: 0, marginBottom: -500 } ,  delay: 600 })\r\n    return (\r\n        <animated.div style={props}>\r\n            <Jumbotron className=\"Jumbo1\" fluid>\r\n                <Container>\r\n                   <Row>\r\n                       <Col><h1 className=\"left ch2\">WELCOME TO THE PREDICTION SYSTEM...</h1></Col>\r\n                       <Col><h4 className=\"ch3\">This is a military module which works over the pattern modelling and a sequential prediction.Where officials are going to predict the success rate of terrorist attack with the help of certain dependent factors that are going uphold the percentage occurence of terrorist Act.</h4></Col>\r\n                   </Row>\r\n\r\n                </Container>\r\n            </Jumbotron>\r\n        </animated.div>\r\n    );\r\n\r\n}\r\n\r\nexport default Content1;","import React from \"react\";\r\nimport Content from \"../Components/Content/Content\";\r\nimport Form from \"../Components/Form/Form\";\r\n\r\nimport Content1 from \"../Components/Content1/Content1\";\r\n\r\nclass Home extends React.Component {\r\n  render(){\r\n    return (\r\n      <div>\r\n        <Content />\r\n        <Content1 />\r\n        <Form />\r\n       \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react'\r\nimport './AboutUs.css'\r\nimport Jonsy from '../Assets/Jonsy.jpg'\r\nimport Vineet from '../Assets/Vineet.jpg'\r\nimport Udit from '../Assets/Udit.jpg'\r\nimport Muskan from '../Assets/Muskan5.jpg'\r\nimport { Card , CardDeck } from 'react-bootstrap' \r\nclass About extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"AboutUs\">\r\n                <CardDeck>\r\n                    <Card bg=\"dark\" text=\"white\">\r\n                        <Card.Img variant=\"top\" src={Muskan} />\r\n                        <Card.Body>\r\n                            <Card.Title>Muskan Golus</Card.Title>\r\n                            <Card.Text>\r\n                                Position\r\n      </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                        </Card.Footer>\r\n                    </Card>\r\n                    <Card bg=\"dark\" text=\"white\">\r\n                        <Card.Img variant=\"top\" src={Udit} />\r\n                        <Card.Body>\r\n                            <Card.Title>Udit Mishra</Card.Title>\r\n                            <Card.Text>\r\n                                Position\r\n        content.{' '}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                        </Card.Footer>\r\n                    </Card>\r\n                    <Card bg=\"dark\" text=\"white\">\r\n                        <Card.Img variant=\"top\" src={Vineet} />\r\n                        <Card.Body>\r\n                            <Card.Title>Vineet Gupta</Card.Title>\r\n                            <Card.Text>\r\n                                Position\r\n      </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                        </Card.Footer>\r\n                    </Card>\r\n\r\n                    <Card bg=\"dark\" text=\"white\">\r\n                        <Card.Img variant=\"top\" src={Jonsy} />\r\n                        <Card.Body>\r\n                            <Card.Title>Vedant Shrotria</Card.Title>\r\n                            <Card.Text>\r\n                               Position\r\n      </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                        </Card.Footer>\r\n                    </Card>\r\n                </CardDeck>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport Container from 'react-bootstrap/Container'\r\nimport './Footer.css'\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n            <Jumbotron className=\"Jumbo4\" fixed=\"bottom\" fluid>\r\n                <Container>\r\n                    <h5>\r\n                        Every Question Have A Solution..We Just Have to Find It Out @2020\r\n                    </h5>\r\n\r\n                </Container>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\nimport \"./Navigation.css\"\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <div>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n                <Navbar.Brand href=\"/\" className = \"mr-auto\">Terror Predictor For You</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"ml-auto\">\r\n                        <Nav.Link href=\"/\">Home</Nav.Link>\r\n                        <Nav.Link href=\"/AboutUs\">AboutUs</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Home from './Home';\r\nimport About from './AboutUs';\r\nimport Footer from \"../Components/Footer/Footer\";\r\nimport Nav from '../Components/Navigation/Navigation';\r\n\r\nclass Layout extends Component {\r\n     render() {\r\n        return (<div>\r\n            <Nav />\r\n            <Switch>\r\n                <Route path=\"/AboutUs\" render={() => <About />} />\r\n                <Route path=\"/\" render={() => <Home />} />\r\n\r\n            </Switch>\r\n            <Footer />\r\n        </div>\r\n\r\n        );\r\n    }\r\n\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Layout from './Containers/Layout';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nclass App extends React.Component {\r\n\r\n  componentDidMount() {\r\n    fetch('http://localhost:3000/')\r\n        .then(response => response.json())\r\n        .then(console.log);\r\n\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"homy\">\r\n          <Layout />\r\n       </div>\r\n      </BrowserRouter>\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}